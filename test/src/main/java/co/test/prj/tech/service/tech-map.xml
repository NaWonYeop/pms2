<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.test.prj.tech.service.TechMapper">
	<select id="techSelectList" resultType="co.test.prj.tech.service.TechVO">
		SELECT * FROM TECH
	</select>
	
	<select id="jobSelectList" resultType="co.test.prj.user.service.UserVO">
		SELECT USER_ID, USER_NAME, USER_CRR, USER_JOB_TTL, USER_JOB_CNT, NVL((SELECT AVG(STR_AVG) FROM 
		STAR WHERE USER_ID=U.USER_ID), 0) AS AVG FROM "user" U
	</select>
	<!-- 찜해놓은 리스트  -->

	<select id="jobInterList" resultType="co.test.prj.user.service.UserVO" parameterType="int">
	SELECT U.USER_ID, USER_NAME, USER_CRR, USER_JOB_TTL, USER_JOB_CNT, NVL((SELECT AVG(STR_AVG) FROM 	STAR WHERE USER_ID=U.USER_ID), 0) AS AVG
	FROM "user" U 
	WHERE USER_ID IN(SELECT USER_ID2 AS USER_ID
	FROM "user" U,INTEREST I
	WHERE U.USER_ID=#{user_id} AND U.USER_ID=I.USER_ID)
	</select>
	
	<select id="techSelect" resultType="co.test.prj.tech.service.TechVO">
		SELECT * FROM TECH WHERE USER_ID2 = #{user_id2}
	</select>
	
	<!-- 구직상세 참여프로젝트 >>> 경일 -->
	<select id="jobJoinList" resultType="co.test.prj.tech.service.TechVO">
		SELECT DISTINCT P.PRJ_NAME, P.PRJ_ID, U.USER_NAME
		FROM PROJECT P, "user" U, APPLICATION A
		WHERE P.MASTER_ID = #{master_id} AND SYSDATE <![CDATA[<]]> P.PRJ_OFR_ED AND P.MASTER_ID=U.USER_ID
	</select>
	
	<!-- 구직상세 찜하기 체크 -->
	<select id="heartbtnCheck" resultType="co.test.prj.interest.service.InterestVO">
		SELECT USER_ID2 FROM INTEREST WHERE USER_ID = #{user_id} AND USER_ID2 = #{user_id2}
	</select>
	
	<!-- 구인현황 확정멤버리스트 -->
	<select id="memberList" resultType="co.test.prj.user.service.UserVO">
		SELECT USER_NAME, USER_CRR, USER_TEL, TM_DEPT
		FROM "user" U, TEAM T
		WHERE PRJ_ID= #{prj_id} AND U.USER_ID=T.USER_ID
	</select>
	
	<!-- 구인현황 참여요청리스트 -->
	<select id="ofterList" resultType="co.test.prj.user.service.UserVO">
		SELECT U.USER_ID, U.USER_NAME, U.USER_CRR, U.USER_TEL, A.APP_STT, A.APP_ID
		FROM "user" U, APPLICATION A
		WHERE U.USER_ID IN (select user_id from application where master_id=#{master_id} and prj_id = #{prj_id} ) AND U.USER_ID = A.USER_ID AND PRJ_ID = #{prj_id} AND APP_CLSFC = 1
	</select>
	
	<!-- 구인현황 프로젝트신청리스트 -->
	<select id="offerFromPrj" resultType="co.test.prj.user.service.UserVO">
		SELECT U.USER_ID, U.USER_NAME, U.USER_CRR, U.USER_TEL, A.APP_STT, A.APP_ID
		FROM "user" U, APPLICATION A
		WHERE U.USER_ID = A.USER_ID AND A.PRJ_ID = #{prj_id} AND A.APP_STT = 'ing' AND APP_CLSFC = 0
	</select>
	
	<!-- 구인현황 관심리스트 -->
	<select id="interestList" resultType="co.test.prj.user.service.UserVO">
		SELECT I.USER_ID2 AS USER_ID, U.USER_NAME, U.USER_CRR, U.USER_TEL
		FROM "user" U, INTEREST I
		WHERE U.USER_ID = I.USER_ID2 and i.user_id = #{user_id}
	</select>
	
	<!-- 신청 업데이트 -->
	<update id="ofterAcceptUpdate" parameterType="co.test.prj.application.service.AppVO">
		UPDATE APPLICATION SET
		<if test="app_stt != null"> APP_STT = #{app_stt} </if>
		WHERE APP_ID = #{app_id}
	</update>
	
	<insert id="ofterAcceptInsert" parameterType="co.test.prj.team.service.TeamVO">
		INSERT INTO TEAM(USER_ID, PRJ_ID, MASTER_ID, tm_pos)
		VALUES(#{user_id}, #{prj_id}, #{master_id}, 'employee')
	</insert>
	
	<!-- 관심 -->
	<insert id="heartAccept" parameterType="co.test.prj.application.service.AppVO">
		<selectKey keyProperty="app_id" resultType="int"
			order="BEFORE">
			SELECT NVL(MAX(APP_ID) + 1, 1) AS ID FROM APPLICATION
		</selectKey>
		INSERT INTO APPLICATION(APP_ID, PRJ_ID, MASTER_ID, USER_ID, APP_CLSFC, APP_STT)
		VALUES(#{app_id}, #{prj_id}, #{master_id}, #{user_id}, 0, 'ing')
	</insert>
	
	<select id="projectOfrAppend" parameterType="co.test.prj.application.service.AppVO" resultType="co.test.prj.application.service.AppVO">
		SELECT APP_ID
		FROM APPLICATION 
		WHERE USER_ID = #{user_id} AND MASTER_ID = #{master_id} AND PRJ_ID = #{prj_id} AND APP_CLSFC = 1 AND APP_STT = 'ing'
	</select>
	
	<delete id="heartDelete" parameterType="co.test.prj.interest.service.InterestVO">
		DELETE FROM INTEREST WHERE USER_ID = #{user_id} AND USER_ID2 = #{user_id2}
	</delete>
	
	<!-- 평가 -->
	<select id="AssessList" parameterType="co.test.prj.project.service.ProjectVO" resultType="co.test.prj.tech.service.TechVO">
		SELECT U.USER_NAME,T.TM_DEPT,U.USER_ID,P.PRJ_NAME,STR_RESULT, P.PRJ_ID, P.prj_devEd_prop
		FROM TEAM T LEFT OUTER JOIN STAR S ON (S.USER_ID=T.USER_ID AND S.PRJ_ID=T.PRJ_ID ),PROJECT P,"user" U
		WHERE T.PRJ_ID= #{prj_id} AND U.USER_ID=T.USER_ID AND P.PRJ_ID=T.PRJ_ID 
	</select>
	
	<insert id="AssessInsert" parameterType="co.test.prj.star.service.StarVO">
		INSERT INTO STAR(PRJ_ID, USER_ID, USER_ID2, STR_PRFSN, STR_OBS, STR_POS, STR_COMM, STR_RE_EMPL, STR_AVG)
		VALUES(#{prj_id}, #{user_id}, #{user_id2}, #{str_prfsn}, #{str_obs}, #{str_pos}, #{str_comm}, #{str_re_empl}, #{str_avg})
	</insert>
	
	<update id="AssessUpdate" parameterType="co.test.prj.star.service.StarVO">
		UPDATE STAR
			<set>
				STR_PRFSN = #{str_prfsn},
				STR_OBS = #{str_obs},
				STR_POS = #{str_pos},
				STR_COMM = #{str_comm},
				STR_RE_EMPL = #{str_re_empl},
				STR_AVG = #{str_avg}
			</set>
		WHERE USER_ID=#{user_id} AND PRJ_ID=#{prj_id}
	</update>
	<!-- 검색 -->
	<select id="jobNameSer" parameterType="String" resultType="co.test.prj.user.service.UserVO">
		SELECT USER_ID, USER_NAME, USER_CRR, USER_JOB_TTL, USER_JOB_CNT, NVL((SELECT AVG(STR_AVG)
        FROM 
		STAR WHERE USER_ID=U.USER_ID), 0) AS AVG FROM "user" U
        where user_name like  '%'||#{USER_NAME}||'%'
	</select>
	<select id="jobTitleSer" parameterType="String" resultType="co.test.prj.user.service.UserVO">
		SELECT USER_ID, USER_NAME, USER_CRR, USER_JOB_TTL, USER_JOB_CNT, NVL((SELECT AVG(STR_AVG)
        FROM 
		STAR WHERE USER_ID=U.USER_ID), 0) AS AVG FROM "user" U
        where user_job_ttl like  '%'||#{USER_J_DATE}||'%'
	</select>
	
	<select id="ttlCheck" resultType="co.test.prj.user.service.UserVO">
		SELECT USER_JOB_TTL, USER_JOB_CNT FROM "user" WHERE USER_ID = #{user_id}
	</select>
</mapper>